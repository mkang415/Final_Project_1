<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket
		http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 어노테이션 기반으로 컴포넌트를 등록할 수 있게 한다 -->
	<!-- (@Controller, @Service) -->
	<annotation-driven />
	
		<!-- 인터셉터 설정 -->
	<interceptors>
   

      <interceptor>
         <mapping path="/ledger/ledger/**" />
         <exclude-mapping path="/interceptor/fail"/>
         <beans:bean class="interceptor.ProjectInterceptor" />
      </interceptor>
   
       <interceptor>
         <mapping path="/schedule/calendar/**" />
         <exclude-mapping path="/interceptor/fail"/>
         <beans:bean class="interceptor.ProjectInterceptor" />
      </interceptor>

       <interceptor>
         <mapping path="/diary/**" />
         <exclude-mapping path="/interceptor/fail"/>
         <beans:bean class="interceptor.ProjectInterceptor" />
      </interceptor>
      
       <interceptor>
         <mapping path="/admin/**" />
         <exclude-mapping path="/interceptor/fail"/>
         <beans:bean class="interceptor.ProjectInterceptor" />
      </interceptor>
      
      <interceptor>
      	<mapping path="/admin/**"/>
      	<exclude-mapping path="interceptor/fail"/>
      	<beans:bean class="interceptor.AdminInterceptor"/>
      </interceptor>
   
   </interceptors>

	<!-- GET으로 요청된 정적인 자원에 대한 매핑 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/img/**" location="/resources/img" />
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1"/> <!-- 우선순위 -->
		
	</beans:bean>
	
	<!-- 자바 스프링 빈 기반의 ViewResolver filedown 할때-->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"/>
	</beans:bean>
	
	<!-- DownloadView클래스를 down이라는 이름의 빈으로 등록 -->
		<beans:bean id="down" class="notice.view.DownloadView" />
	
	<!-- JSON응답을 위한 jsonView 스프링 빈 등록 -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=utf-8"/>
	</beans:bean>
	
	<!-- MultipartResolver -->
	<!-- 파일업로드 처리 클래스 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxInMemorySize" value="1048576"/> <!-- 1mb -->
		<beans:property name="maxUploadSize" value="10485760"/>	<!-- 10mb -->
	</beans:bean>
	
	<!-- 웹소켓 빈 등록 -->
<beans:bean class="notice.chating.EchoHandler" id="echoHandler"/>
<websocket:handlers>
	<websocket:mapping path="/echo" handler="echoHandler"/>
	
	<websocket:sockjs/>

</websocket:handlers>
	
	
	<!-- 컴포넌트를 스캔(검색후 등록)할 패키지를 지정 -->
	<!-- 여러 패키지를 등록할 때에는 , 로 구분하다. -->
	<context:component-scan base-package="admin, board, diary, ledger, main, member, memo, notice, qna, schedule, vote, reply" />
	
	
	
</beans:beans>
